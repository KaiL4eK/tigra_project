 
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <param name="robot_description" command="$(find xacro)/xacro '$(find visual_custom_telemetry)/urdf/robot_with_cameras.urdf.xacro'" />
        <arg name="x" default="0"/>
        <arg name="y" default="0"/>
        <arg name="z" default="1.0"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find visual_custom_telemetry)/worlds/ETU.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="new_robot_description"
    command="$(find xacro)/xacro --inorder '$(find visual_custom_telemetry)/urdf/robot_with_cameras.urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model my_bot -param robot_description"/> -->
    <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description -model robot -x $(arg x) -y $(arg y) -z $(arg z)" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />


  <!-- <node pkg="tf" type="static_transform_publisher" name="car_2_camera_tf" args="0 2 0 0 0 0  front_left_optical_frame base_link 100" /> -->

</launch>